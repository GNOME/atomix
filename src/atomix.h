/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef atomix_H
#define atomix_H 1
#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */

/** typedefs **/
#if !defined(ORBIT_DECL_Atomix_AtomixGame) && !defined(_Atomix_AtomixGame_defined)
#define ORBIT_DECL_Atomix_AtomixGame 1
#define _Atomix_AtomixGame_defined 1
#define Atomix_AtomixGame__free CORBA_Object__free
   typedef CORBA_Object Atomix_AtomixGame;
   extern CORBA_unsigned_long Atomix_AtomixGame__classid;
#endif

/** POA structures **/
   typedef struct {
      void *_private;
      void (*doit) (PortableServer_Servant _servant, CORBA_Environment * ev);
   } POA_Atomix_AtomixGame__epv;
   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Atomix_AtomixGame__epv *Atomix_AtomixGame_epv;
   } POA_Atomix_AtomixGame__vepv;
   typedef struct {
      void *_private;
      POA_Atomix_AtomixGame__vepv *vepv;
   } POA_Atomix_AtomixGame;
   extern void POA_Atomix_AtomixGame__init(PortableServer_Servant servant, CORBA_Environment * ev);
   extern void POA_Atomix_AtomixGame__fini(PortableServer_Servant servant, CORBA_Environment * ev);

/** prototypes **/
   void Atomix_AtomixGame_doit(Atomix_AtomixGame _obj, CORBA_Environment * ev);

   void _ORBIT_skel_Atomix_AtomixGame_doit(POA_Atomix_AtomixGame * _ORBIT_servant, GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev, void (*_impl_doit) (PortableServer_Servant _servant, CORBA_Environment * ev));
#ifdef __cplusplus
}

#endif				/* __cplusplus */
#endif
#undef ORBIT_IDL_SERIAL
