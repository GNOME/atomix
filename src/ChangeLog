2001-12-02  Jens Finke <jens@triq.net>		

	* main.c (create_gui): Use g_signal_connect.
	(splash_destroy),
	(splash_button_event),
	(create_splash): New functions for splash screen handling.
	(main): Create splash screen.

2001-12-02  Jens Finke <jens@triq.net>

	* board.c (board_init_level): Ref goal object.
	(board_clear): Unref goal object.

	* main.c: Rewrote the control flow handling. There is now a
	central function (controller_handle_action) which takes care of
	all the game state changes and need actions. Lot's of code could
	be removed because of this simplification.
	(calculate_score): New function.
	(update_player_info): Renamed to update_statistics.
	
2001-12-02  Jens Finke <jens@triq.net>

	* Makefile.am (atomix_SOURCES): Added gtk-clock.[ch].

	* gtk-clock.[ch]: New files.

	* gtk-time-limit.[ch]: Removed files.

	* main.c (get_app): Removed function.
	(game_init): Initialize the clock format.
	(game_prepare_level): Set clock to 0 seconds and start it.
	(game_level_timeout): Removed function.
	(game_bonus_level_timeout): Removed function.
	(game_level_finished): Stop clock and set to 0 seconds.
	(game_pause): Stop clock.
	(game_continue): Start clock.
	(add_statistics_table_entry): New utility function.
	(create_mainwin_content): Use add_statistics_table_entry.

2001-12-01  Jens Finke <jens@triq.net>

	* atomix.h: Removed file.

2001-12-01  Jens Finke <jens@triq.net>

	* atomix-ui.xml: Added more command shortcuts.
	Added 'Reset level' menu item.

	* undo.[ch]: Rewrote this. Stores unlimited moves in a stack like
	datastructure now.

	* board.c: Adapted to new undo design.
	(move_item_anim): Select item only if it was also selected before
	the animation.

	* main.c (verb_GameReset_cb): New callback function.
	(game_init): Don't connect to main window key press event. This
	enables the shortcuts again. 
	(game_new): Grab focus for canvas widget.
	(create_mainwin_content): Connect key handler to playfield canvas
	key event.
	
2001-11-30  Jens Finke <jens@triq.net>

	* board.c (board_init_level): Show atom items explicitely.

	* level_manager.c: Removed debug messages.
	(add_level): Made remaining output messages translateable.

	* main.c (create_user_config_dir): Rewrote function.
	(create_mainwin_content): Removed debug messages.
	(create_gui): Check existance of ui xml file.
	(main): Increased main window size.

	* theme-manager.c: Removed debug messages.

2001-11-30  Jens Finke <jens@triq.net>

	* goal-view.[ch] (clear_view): Renamed to goal_view_clear and made it
	a public function.

	* main.c (game_prepare_level): Clear goal view.
	(game_clean_up): Clear goal view.

2001-11-30  Jens Finke <jens@triq.net>

	* board.c (board_init): Create selector only once here not for
	every level initialization.
	(board_init_level): Place selector in the middle of the playfield.
	(board_destroy): Call selector_destroy.
	(board_undo_move): Hide selector during move.
	(board_clear): Just hide the selector, don't destroy it.
	(board_set_keyboard_control): Removed function.
	(move_item): Hide selector during atom move.
	(move_item_anim): Update status of selector after moving.
	(selector_move_to): Move the selector arrows too.
	(selector_unselect): Hide selector arrows.
	(selector_arrows_hide),
	(selector_hide),
	(show_arrow_group),
	(selector_arrows_show),
	(selector_destroy): New functions. Indicate possible atom
	directions through arrows.
	(selector_select): Show arrows.
	(selector_create): Create arrow canvas items too.

	* board.h (board_set_mouse_control), (board_set_keyboard_control):
	Removed declarations.

	* theme-manager.c (handle_selector_node): New function.
	(theme_manager_get_theme): Don't free theme_dir variable.
	(load_theme): Call handle_selector_node on 'selector' node.

	* theme-private.h (theme_set_selector_arrow_image): New declaration.

	* theme.[ch] (theme_get_selector_arrow_images): New function.
	(theme_set_selector_arrow_image): New function.

2001-11-28  Jens Finke <jens@triq.net>

	* main.c (create_gui): Use new bonobo_ui_util_set_ui
	signature. Should be compilable now with the upcoming Gnome 2.0
	beta version.

2001-11-27  Jens Finke <jens@triq.net>

	* Makefile.am (atomix_SOURCES): Removed global.h.
	(libatomix_a_SOURCES): Added level-private.h.
	(EXTRA_DIST): Added atomix-ui.xml.

	* board.c (board_render): Don't print playfield layout.

2001-11-25  Jens Finke <jens@triq.net>

	* Makefile.am: Install atomix-ui.xml file in $(pkgdatadir)/ui.
	Don't create score file at install time.

	* level-manager.c (level_manager_init_levels): Look for the level
	sequence description in the global atomix datadir too. Don't use
	'/' in g_build_filename function.

	* main.c (create_gui): Look for ui file in global datadir.

	* theme-manager.c (theme_manager_init_themes): Don't use '/' in
	g_build_filename.
	
2001-11-25  Jens Finke <jens@triq.net>

	* board.c (selector_new): Add selector item to list of board
	canvas items.

	* main.c (game_skip_level): Increase level number.

2001-11-25  Jens Finke <jens@triq.net>

	* board.c (board_render): Center the playfield correctly. 

	* level-manager.c (add_level): No newline after debug output.

	* theme-manager.c (add_theme): No newline after debug output.

	* main.c (create_canvas_widget): Don't create scrolled window
	around gnome canvas.
	(main): Set initial size of main window to 620/420.

2001-11-22  Jens Finke <jens@triq.net>

	This is the first time after the GNOME 2.0 port that you can play
	atomix again. Well, theoretically. I must add the themes and
	levels to CVS yet.

	* board.c (move_item): The calculation of the item pixel position
	is somehow wrong. Added an ugly hack to correct this. Simplified
	control flow.

	* goal.c: Big changes here. With the new tile.[ch] design we can't
	use a hashtable as goal index anymore. There is now a gslist,
	which shouldn't be a performance hit since it stores only a couple
	of atom infos.
	(find_tile): New function, for searching in the list.
	(destroy_hash_value), (print_hash_table), (goal_print): removed
	functions.

	* main.c (game_prepare_level): Initialize the goal again.
	(game_level_finished): This uses the globale instance of AtomixApp
	now. This should be fixed.

	* tile.c (tile_finalize): Removed debug output.
	
2001-11-21  Jens Finke <jens@triq.net>

	* board.c: Reworked this completely. Removed all the mouse
	handling stuff and the need for the canvas_map_*
	functions. Cleaned up the code.

	* main.c (on_key_press_event): New key press handler.
	(game_init): Register key event handler.
	(game_prepare_level): Don't free goal_pf.
	(game_level_timeout): Don't call board_show_normal_cursor.
	(game_level_finished): dito.
	
2001-11-20  Jens Finke <jens@triq.net>

	* .cvsignore: Added level-convert and pf-test.

2001-11-20  Jens Finke <jens@triq.net>

	* Checked huge page in. There are three major tile types now:
	ATOM, WALL and FLOOR. Each tile has a base image which may have
	overlay and underlay images too. Level descriptions consist of
	three parts now: environment, scenario and goal. These changes
	affects nearly all files.

	* level-convert.c: New file, converts levels from the 0.4.3 format
	to the new format.

	* pf-test.c: New file, checks functions of the playfield data
	type..
	
	* Makefile.am (noinst_PROGRAMS): Added programs level-convert and
	pf-test.
	
2001-11-15  Jens Finke <jens@triq.net>

	* goal-view.c (create_small_item): Scale the pixbuf with
	gdk_pixbuf_scale_simple.

	* main.c (create_canvas_widget): Create an aa canvas.
	
2001-11-14  Jens Finke <jens@triq.net>

	* board.c (board_render): Use playfield_get_n_cols when iterating
	over the columns.

	* goal-view.c (clear_view): Check if item_group is != NULL.

	* level-manager.c (create_level_sequence): Added dummy handler for
	'text' tag.
	(load_level): Added dummy handler for 'text' tag. Print just a
	message about unknown tag not a warning.

	* playfield.c (playfield_new_from_xml): Added dummy handler for
	'text' tag.

	* theme-manager.c (load_theme),
	(handle_link_image_node),
	(handle_base_image_node): Added dummy handler for 'text' tag.

	* tile.c (tile_new_from_xml): Added dummy handler for 'text' tag.
	
2001-11-14  Jens Finke <jens@triq.net>

	* level-private.h: Forgot to add this. So here it is. 

2001-11-14  Jens Finke <jens@triq.net>

	* board.c (board_render): Check for tile == NULL.

	* goal.c (destroy_hash_value): Use g_slist_free to free the list.

	* level-manager.c (level_manager_init_levels): Look in
	~/.atomix/levels/ for 'sequence' file for now.
	(search_level_in_dir): Skip the dirs '.' and '..' correctly as
	well as the 'sequence' file. Use g_build_filename with NULL as
	last argument.
	(level_manager_get_next_level): Number of levels > 0 isn't an
	assertion anymore, but will be checked with a normal if statement.
	Get the filename from the hash table not the sequence list.
	(load_level): For a 'goal' node skip all other child nodes than
	'playfield'.

	* main.c (game_user_quits): Use gtk_widget_destroy to free the
	dialog. Check user response against GTK_RESPONSE_YES.
	(game_finished): Use gtk_widget_destroy to free the dialog.

	* theme.c (get_theme_image_pixbuf): Ref every pixbuf before
	returning.
	
2001-11-14  Jens Finke <jens@triq.net>

	* Makefile.am: Added playfield test program 'pf-test'.
	(atomix_SOURCES): Added goal-view.[ch], removed callbacks.[ch],
	preferences.[ch].
	(libatomix_a_SOURCES): Added level-manager.[ch]
	
	* board.[ch]: Reworked this, so that it works with the other new
	classes.

	* goal-view.[ch]: New files.

	* goal.[ch]: Reworked this. It is now a seperate class with all
	the gui stuff moved to goal-view.[ch].

	* callbacks.[ch]: Removed files.

	* canvas_helper.[ch]: Removed the non ref functions and removed
	the function name suffix _ref from the rest.

	* level-manager.[ch] (level_manager_is_last_level): New function.
	(level_manager_get_next_level): Use the filname from the successor
	of the search result.

	* level.c (level_get_playfield): Ref the outgoing playfield reference.
	(level_get_goal): dito.

	* level.h (level_get_type): Moved here from level-private.h.

	* main.[ch]: Reworked this and removed some of the functionality
	for now. It's more clean and structured now. Contains all the
	callbacks too.

	* theme-manager.c (handle_base_image_node): Ignore non bimage xml
	nodes.
	(handle_link_image_node): Ignore non limage xml nodes.

	* theme.h (theme_get_type): Moved here from theme-private.h.

	* theme.c (theme_finalize): Don't iterate through the hash table
	to free objects.
	(theme_new): Provide destroy method for hash data with
	g_hash_table_new_full.

	* util.c: Commented out all the functionality for now. We havn't a
	statusbar yet.

	* global.h: Removed file.
	
2001-11-13  Jens Finke <jens@triq.net>

	* level-manager.[ch]: New files.

	* level.[ch]: Reworked these files, moved a lot of the general
	level handling to level-manager.[ch].

	* playfield.[ch] (playfield_get_type): Fixed class type.
	(playfield_new_from_xml): New function.

	* theme-manager.c (theme_manager_init): Provide destroy functions
	for hash table key and value objects.
	(destroy_theme_item): Removed.
	(load_theme): Create theme after xml document creation.

	* theme.c (theme_get_type): Fixed class type.

	* tile.[ch] (tile_new_from_xml): New function.

2001-11-12  Jens Finke <jens@triq.net>

	* goal.[ch]: Reworked these files.

	* main.[ch] (get_app): Added this function again temporary.

	* playfield.[ch] (playfield_get_n_rows),
	(playfield_get_n_cols): New functions.

	* tile.[ch]: Added link_id_value attribute, which defines the
	attached links as one single integer value.
	(tile_init), 
	(tile_copy), 
	(tile_add_link), 
	(tile_remove_link),
	(tile_remove_all_links): Update link_id_value.
	(tile_is_equal): New function, compares two tiles.
	(tile_get_hash_value): New function, returns a single value, which
	identifies a tile uniquely.
	(tile_print): Made the output better fitting into playfield_print.

2001-11-12  Jens Finke <jens@triq.net>

	* playfield.[ch]: Rewrote this, uses glib object system now.

2001-11-12  Jens Finke <jens@triq.net>

	* theme-manager.c (theme_manager_init), (search_themes_in_dir),
	(load_theme): Removed unneeded variables.
	(string_to_tile_link): Initialize link with TILE_LINK_LAST.

	* theme.[ch] (theme_get_name), (theme_get_animstep): New functions.

2001-11-12  Jens Finke <jens@triq.net>

	* board.c: Adaptions to make it work with the new tile.[ch].
	(create_obstacle), (create_moveable), (create_item):
	Removed deprecated functions.
	(create_tile): New function, which uses the new theme interface.

	* callbacks.c (atomix_exit): Use g_object_unref to free the theme.

	* main.[ch]: Adaptions to the new theme[-manager] interface.

	* tile.c (tile_has_link): Return always false on TILE_LINK_LAST.
	
